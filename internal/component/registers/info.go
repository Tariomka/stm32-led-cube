package registers

import (
	"device/stm32"
	"machine"
	"strconv"
)

func PrintAndResetCrashLog() {
	println("=================================")
	println("------- Reset cause flags -------")
	println("=================================")
	println(" - RCC CSR value:                  ", strconv.FormatInt(int64(stm32.RCC.CSR.Get()), 2))
	println(" - Low-power reset flag:           ", stm32.RCC.GetCSR_LPWRRSTF())
	println(" - Window watchdog reset flag:     ", stm32.RCC.GetCSR_WWDGRSTF())
	println(" - Independent watchdog reset flag:", stm32.RCC.GetCSR_IWDGRSTF())
	println(" - Software reset flag:            ", stm32.RCC.GetCSR_SFTRSTF())
	println(" - POR/PDR reset flag:             ", stm32.RCC.GetCSR_PORRSTF())
	println(" - PIN reset flag:                 ", stm32.RCC.GetCSR_PINRSTF())
	println("=================================")

	stm32.RCC.SetCSR_RMVF(0x1)
}

func PrintButtonStates() {
	println("=================================")
	println("--------- Button states ---------")
	println("=================================")
	println(" - Button Previous:  ", !machine.PC0.Get())
	println(" - Button Next:      ", !machine.PC1.Get())
	println(" - Button Speed More:", !machine.PC2.Get())
	println(" - Button Speed Less:", !machine.PB3.Get())
	println(" - Button Run/Pause: ", !machine.PA14.Get())
	println(" - Button Cycle:     ", !machine.PA13.Get())
	println(" - Button On/Off:    ", !machine.PA11.Get())
	println("---------------------------------")
	println(" - Switch 1:", machine.PA1.Get())
	println(" - Switch 2:", machine.PC3.Get())
	println("=================================")
}

func PrintRegisterValues() {
	println("=================================")
	println("-------- Register values --------")
	println("=================================")
	println(" CRC register values:")
	println(" - DR value: ", strconv.FormatInt(int64(stm32.CRC.DR.Get()), 2))
	println(" - IDR value:", strconv.FormatInt(int64(stm32.CRC.IDR.Get()), 2))
	println(" - CR value: ", strconv.FormatInt(int64(stm32.CRC.CR.Get()), 2))
	println("---------------------------------")
	println(" PWR register values:")
	println(" - CR value: ", strconv.FormatInt(int64(stm32.PWR.CR.Get()), 2))
	println(" - CSR value:", strconv.FormatInt(int64(stm32.PWR.CSR.Get()), 2))
	println("---------------------------------")
	println(" BKP register values:")
	println(" - RTCCR value:", strconv.FormatInt(int64(stm32.BKP.RTCCR.Get()), 2))
	println(" - CR value:   ", strconv.FormatInt(int64(stm32.BKP.CR.Get()), 2))
	println(" - CSR value:  ", strconv.FormatInt(int64(stm32.BKP.CSR.Get()), 2))
	println("---------------------------------")
	println(" RCC register values:")
	println(" - CR value:      ", strconv.FormatInt(int64(stm32.RCC.CR.Get()), 2))
	println(" - CFGR value:    ", strconv.FormatInt(int64(stm32.RCC.CFGR.Get()), 2))
	println(" - CIR value:     ", strconv.FormatInt(int64(stm32.RCC.CIR.Get()), 2))
	println(" - APB2RSTR value:", strconv.FormatInt(int64(stm32.RCC.APB2RSTR.Get()), 2))
	println(" - APB1RSTR value:", strconv.FormatInt(int64(stm32.RCC.APB1RSTR.Get()), 2))
	println(" - AHBENR value:  ", strconv.FormatInt(int64(stm32.RCC.AHBENR.Get()), 2))
	println(" - APB2ENR value: ", strconv.FormatInt(int64(stm32.RCC.APB2ENR.Get()), 2))
	println(" - APB1ENR value: ", strconv.FormatInt(int64(stm32.RCC.APB1ENR.Get()), 2))
	println(" - BDCR value:    ", strconv.FormatInt(int64(stm32.RCC.BDCR.Get()), 2))
	println(" - CSR value:     ", strconv.FormatInt(int64(stm32.RCC.CSR.Get()), 2))
	println("---------------------------------")
	println(" AFIO register values:")
	println(" - EVCR value:   ", strconv.FormatInt(int64(stm32.AFIO.EVCR.Get()), 2))
	println(" - MAPR value:   ", strconv.FormatInt(int64(stm32.AFIO.MAPR.Get()), 2))
	println(" - EXTICR1 value:", strconv.FormatInt(int64(stm32.AFIO.EXTICR1.Get()), 2))
	println(" - EXTICR2 value:", strconv.FormatInt(int64(stm32.AFIO.EXTICR2.Get()), 2))
	println(" - EXTICR3 value:", strconv.FormatInt(int64(stm32.AFIO.EXTICR3.Get()), 2))
	println(" - EXTICR4 value:", strconv.FormatInt(int64(stm32.AFIO.EXTICR4.Get()), 2))
	println(" - MAPR2 value:  ", strconv.FormatInt(int64(stm32.AFIO.MAPR2.Get()), 2))
	println("---------------------------------")
	println(" EXTI(External Interrupt/Event controller) register values:")
	println(" - IMR value:  ", strconv.FormatInt(int64(stm32.EXTI.IMR.Get()), 2))
	println(" - EMR value:  ", strconv.FormatInt(int64(stm32.EXTI.EMR.Get()), 2))
	println(" - RTSR value: ", strconv.FormatInt(int64(stm32.EXTI.RTSR.Get()), 2))
	println(" - FTSR value: ", strconv.FormatInt(int64(stm32.EXTI.FTSR.Get()), 2))
	println(" - SWIER value:", strconv.FormatInt(int64(stm32.EXTI.SWIER.Get()), 2))
	println(" - PR value:   ", strconv.FormatInt(int64(stm32.EXTI.PR.Get()), 2))
	println("---------------------------------")
	println(" DBG register values:")
	println(" - IDCODE value:", strconv.FormatInt(int64(stm32.DBGMCU.IDCODE.Get()), 2))
	println(" - CR value:    ", strconv.FormatInt(int64(stm32.DBGMCU.CR.Get()), 2))
	println("=================================")
}

func PrintInputOutputRegisterValues() {
	println("=================================")
	println("------- General I/O values ------")
	println("=================================")
	println(" CRL (configuration register low) values:")
	println(" A Port values:")
	println(" - CRL(7-0) value: ", strconv.FormatInt(int64(stm32.GPIOA.CRL.Get()), 2))
	println(" - CRH(15-8) value:", strconv.FormatInt(int64(stm32.GPIOA.CRH.Get()), 2))
	println(" - IDR value:      ", strconv.FormatInt(int64(stm32.GPIOA.IDR.Get()), 2))
	println(" - ODR value:      ", strconv.FormatInt(int64(stm32.GPIOA.ODR.Get()), 2))
	// println(" - BSRR value:     ", strconv.FormatInt(int64(stm32.GPIOA.BSRR.Get()), 2))
	// println(" - BRR value:      ", strconv.FormatInt(int64(stm32.GPIOA.BRR.Get()), 2))
	// println(" - LCKR value:     ", strconv.FormatInt(int64(stm32.GPIOA.LCKR.Get()), 2))
	println("---------------------------------")
	println(" B Port values:")
	println(" - CRL(7-0) value: ", strconv.FormatInt(int64(stm32.GPIOB.CRL.Get()), 2))
	println(" - CRH(15-8) value:", strconv.FormatInt(int64(stm32.GPIOB.CRH.Get()), 2))
	println(" - IDR value:      ", strconv.FormatInt(int64(stm32.GPIOB.IDR.Get()), 2))
	println(" - ODR value:      ", strconv.FormatInt(int64(stm32.GPIOB.ODR.Get()), 2))
	// println(" - BSRR value:     ", strconv.FormatInt(int64(stm32.GPIOB.BSRR.Get()), 2))
	// println(" - BRR value:      ", strconv.FormatInt(int64(stm32.GPIOB.BRR.Get()), 2))
	// println(" - LCKR value:     ", strconv.FormatInt(int64(stm32.GPIOB.LCKR.Get()), 2))
	println("---------------------------------")
	println(" C Port values:")
	println(" - CRL(7-0) value: ", strconv.FormatInt(int64(stm32.GPIOC.CRL.Get()), 2))
	println(" - CRH(15-8) value:", strconv.FormatInt(int64(stm32.GPIOC.CRH.Get()), 2))
	println(" - IDR value:      ", strconv.FormatInt(int64(stm32.GPIOC.IDR.Get()), 2))
	println(" - ODR value:      ", strconv.FormatInt(int64(stm32.GPIOC.ODR.Get()), 2))
	// println(" - BSRR value:     ", strconv.FormatInt(int64(stm32.GPIOC.BSRR.Get()), 2))
	// println(" - BRR value:      ", strconv.FormatInt(int64(stm32.GPIOC.BRR.Get()), 2))
	// println(" - LCKR value:     ", strconv.FormatInt(int64(stm32.GPIOC.LCKR.Get()), 2))
	println("---------------------------------")
	println(" D Port values:")
	println(" - CRL(7-0) value: ", strconv.FormatInt(int64(stm32.GPIOD.CRL.Get()), 2))
	println(" - CRH(15-8) value:", strconv.FormatInt(int64(stm32.GPIOD.CRH.Get()), 2))
	println(" - IDR value:      ", strconv.FormatInt(int64(stm32.GPIOD.IDR.Get()), 2))
	println(" - ODR value:      ", strconv.FormatInt(int64(stm32.GPIOD.ODR.Get()), 2))
	// println(" - BSRR value:     ", strconv.FormatInt(int64(stm32.GPIOD.BSRR.Get()), 2))
	// println(" - BRR value:      ", strconv.FormatInt(int64(stm32.GPIOD.BRR.Get()), 2))
	// println(" - LCKR value:     ", strconv.FormatInt(int64(stm32.GPIOD.LCKR.Get()), 2))
	println("---------------------------------")
	println(" E Port values:")
	println(" - CRL(7-0) value: ", strconv.FormatInt(int64(stm32.GPIOE.CRL.Get()), 2))
	println(" - CRH(15-8) value:", strconv.FormatInt(int64(stm32.GPIOE.CRH.Get()), 2))
	println(" - IDR value:      ", strconv.FormatInt(int64(stm32.GPIOE.IDR.Get()), 2))
	println(" - ODR value:      ", strconv.FormatInt(int64(stm32.GPIOE.ODR.Get()), 2))
	// println(" - BSRR value:     ", strconv.FormatInt(int64(stm32.GPIOE.BSRR.Get()), 2))
	// println(" - BRR value:      ", strconv.FormatInt(int64(stm32.GPIOE.BRR.Get()), 2))
	// println(" - LCKR value:     ", strconv.FormatInt(int64(stm32.GPIOE.LCKR.Get()), 2))
	println("---------------------------------")
	println(" F Port values:")
	println(" - CRL(7-0) value: ", strconv.FormatInt(int64(stm32.GPIOF.CRL.Get()), 2))
	println(" - CRH(15-8) value:", strconv.FormatInt(int64(stm32.GPIOF.CRH.Get()), 2))
	println(" - IDR value:      ", strconv.FormatInt(int64(stm32.GPIOF.IDR.Get()), 2))
	println(" - ODR value:      ", strconv.FormatInt(int64(stm32.GPIOF.ODR.Get()), 2))
	// println(" - BSRR value:     ", strconv.FormatInt(int64(stm32.GPIOF.BSRR.Get()), 2))
	// println(" - BRR value:      ", strconv.FormatInt(int64(stm32.GPIOF.BRR.Get()), 2))
	// println(" - LCKR value:     ", strconv.FormatInt(int64(stm32.GPIOF.LCKR.Get()), 2))
	println("---------------------------------")
	println(" G Port values:")
	println(" - CRL(7-0) value: ", strconv.FormatInt(int64(stm32.GPIOG.CRL.Get()), 2))
	println(" - CRH(15-8) value:", strconv.FormatInt(int64(stm32.GPIOG.CRH.Get()), 2))
	println(" - IDR value:      ", strconv.FormatInt(int64(stm32.GPIOG.IDR.Get()), 2))
	println(" - ODR value:      ", strconv.FormatInt(int64(stm32.GPIOG.ODR.Get()), 2))
	// println(" - BSRR value:     ", strconv.FormatInt(int64(stm32.GPIOG.BSRR.Get()), 2))
	// println(" - BRR value:      ", strconv.FormatInt(int64(stm32.GPIOG.BRR.Get()), 2))
	// println(" - LCKR value:     ", strconv.FormatInt(int64(stm32.GPIOG.LCKR.Get()), 2))
	println("=================================")
}

func PrintCheck() {
	println("=================================")
	println(" RCC APB2ENR AFIOEN value:", strconv.FormatInt(int64(stm32.RCC.GetAPB2ENR_AFIOEN()), 2))
	println("---------------------------------")
	println(" AFIO MAPR SWJ_CFG value:", strconv.FormatInt(int64(stm32.AFIO.GetMAPR_SWJ_CFG()), 2))
	println("---------------------------------")
	mode := strconv.FormatInt(int64(stm32.GPIOA.GetCRH_MODE14()), 2)
	cnf := strconv.FormatInt(int64(stm32.GPIOA.GetCRH_CNF14()), 2)
	println(" GPIOA Pin PA14 MODE value:", mode)
	println(" GPIOA Pin PA14 CNF value: ", cnf)
	println(" Pin PA14 value:", cnf+mode)
	println("=================================")
}
